using TMPro;
using UnityEngine;
using UnityEngine.UI;

public class TestCardUI : MonoBehaviour
{
    public TMP_Text titleText;          // –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞
    public Button startButton;          // –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–π—Ç–∏"

    private string testId;              // ID —Ç–µ—Å—Ç–∞ –∏–∑ Firebase

    public GameObject passTestPanel;           // –ü–∞–Ω–µ–ª—å —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏
    public PassTestManager passTestManager;    // –°–∫—Ä–∏–ø—Ç, —É–ø—Ä–∞–≤–ª—è—é—â–∏–π –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ–º —Ç–µ—Å—Ç–∞
    private GameObject listPanel;              // –ü–∞–Ω–µ–ª—å, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è

    public void Setup(string id, string title, GameObject pnl, PassTestManager manager, GameObject parentPanel)
    {
        Debug.Log("üìå Setup –≤—ã–∑–≤–∞–Ω –¥–ª—è: " + id);
        testId = id;
        titleText.text = title;

        passTestPanel = pnl;
        passTestManager = manager;
        listPanel = parentPanel; // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –ø–∞–Ω–µ–ª—å

        startButton.onClick.RemoveAllListeners();
        startButton.onClick.AddListener(StartTest);
    }

    void StartTest()
    {
        Debug.Log("–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç: " + testId);
        Debug.Log("‚ñ∂Ô∏è StartTest –≤—ã–∑–≤–∞–Ω, testId = " + testId + ", title = " + titleText.text);

        // –¢–∞–∫ –∫–∞–∫ —É —Ç–µ—Å—Ç–æ–≤ –Ω–µ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –ø–µ—Ä–µ–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É. 
        // –õ–æ–≥–∏–∫–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è XP –≤ PassTestManager –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç —ç—Ç–æ.
        if (passTestManager != null)
        {
            passTestManager.LoadTest(testId, titleText.text, "–Ω–µ —É–∫–∞–∑–∞–Ω–∞", listPanel); 
        }
        else
        {
            Debug.LogError("[TestCardUI] passTestManager –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω!");
            return;
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è –Ω–∞ –ø–∞–Ω–µ–ª—å —Ç–µ—Å—Ç–∞, —É–∫–∞–∑—ã–≤–∞—è, –∫—É–¥–∞ –≤–µ—Ä–Ω—É—Ç—å—Å—è
        if (CloseButtonManager.Instance != null)
        {
            CloseButtonManager.Instance.AttachCloseButton(passTestPanel, listPanel);
        }

        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å —á–µ—Ä–µ–∑ –º–µ–Ω–µ–¥–∂–µ—Ä
        if (PanelManager.Instance != null)
        {
            PanelManager.Instance.ShowOnly(passTestPanel);
        }
        else
        {
            // –§–æ–ª–ª–±—ç–∫, –µ—Å–ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –Ω–µ—Ç
            passTestPanel.SetActive(true);
        }
    }
}
